
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # new_styles <- -1*c(9824,9827,9829,9830)
> new_styles <- 15:18
> 
> 
> INU_vec <- c("00", "10", "20")
> all_normal <- c()
> all_DL     <- c()
> 
> for(i in 1:3){
+     f1 <- paste0("values/pred-noise-5-INU-", INU_vec[i], ".csv")
+     f2 <- paste0("values/DL-pred-noise-5-INU-", INU_vec[i], ".csv")
+ 
+     all_normal <- rbind(all_normal, as.matrix(read.csv(f1, header = F))[c(6,7,3, 13,14,10), ])
+     all_DL     <- rbind(all_DL    , as.matrix(read.csv(f2, header = F))[c(6,7,3, 13,14,10), ])
+ }
> 
> all_normal <- data.frame(all_normal)
> all_DL <- data.frame(all_DL)
> 
> method <- rep(c("LS", "MLE"), each=3, times=3)  # The second will be 3
> measures <- rep(c("MAPE", "RMSPE", "SSIM"), 3 * 2)
> INU <- rep(INU_vec, each = 3 * 2)
> DL <- rep(c(F, T), each = 3 * 3 * 2)
> 
> all_normal <- cbind(measures, INU, method, all_normal)
> all_DL     <- cbind(measures, INU, method, all_DL    )
> 
> all_dat <- cbind(DL, rbind(all_normal, all_DL))
> all_dat$INU <- as.numeric(all_dat$INU)
> 
> rm(DL)
> rm(measures)
> rm(INU)
> 
> 
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> all_dat_old <- all_dat
> # all_dat$DL <- ifelse(all_dat$DL, "DL", "No DL")
> 
> 
> ## Plots
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.6     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.1.1     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(tidyr)
> library(ggplot2)
> library(xtable)
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "MAPE") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(INU) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(1,1,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Wed Jul  6 10:22:44 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
INU & method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
0.0 & .LS & 21.12 & 20.15 & 23.16 & 18.88 & 18.09 & 23.64 & 16.19 & 19.41 & 23.35 \\ 
  0.0 & DL.LS & 13.27 & 12.87 & 14.79 & 12.96 & 12.55 & 13.73 & 10.58 & 13.39 & 19.03 \\ 
  0.0 & .MLE & 22.72 & 21.74 & 24.90 & 20.55 & 19.73 & 24.28 & 16.57 & 19.62 & 23.54 \\ 
  0.0 & DL.MLE & 13.43 & 13.02 & 14.98 & 13.11 & 12.69 & 13.80 & 10.55 & 13.36 & 19.02 \\ 
  1000.0 & .LS & 21.78 & 20.74 & 24.43 & 19.67 & 18.70 & 25.72 & 17.34 & 20.49 & 24.01 \\ 
  1000.0 & DL.LS & 13.91 & 13.45 & 16.65 & 13.92 & 13.36 & 17.65 & 12.31 & 14.65 & 19.95 \\ 
  1000.0 & .MLE & 23.13 & 22.08 & 25.88 & 21.07 & 20.07 & 26.16 & 17.54 & 20.69 & 24.19 \\ 
  1000.0 & DL.MLE & 13.99 & 13.52 & 16.75 & 13.98 & 13.41 & 17.65 & 12.24 & 14.67 & 19.99 \\ 
  2000.0 & .LS & 25.21 & 24.87 & 28.59 & 26.22 & 25.34 & 31.78 & 23.14 & 20.52 & 21.87 \\ 
  2000.0 & DL.LS & 17.45 & 16.83 & 22.12 & 18.55 & 17.43 & 25.47 & 18.38 & 18.50 & 20.80 \\ 
  2000.0 & .MLE & 26.06 & 25.70 & 29.47 & 27.00 & 26.09 & 31.92 & 23.07 & 20.73 & 22.16 \\ 
  2000.0 & DL.MLE & 17.42 & 16.80 & 22.10 & 18.51 & 17.37 & 25.43 & 18.33 & 18.54 & 20.87 \\ 
   \hline
\end{tabular}
\end{table}
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "RMSPE") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(INU) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(1,1,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Wed Jul  6 10:22:44 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
INU & method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
0.0 & .LS & 25.59 & 26.68 & 21.46 & 24.77 & 27.98 & 20.02 & 21.78 & 27.30 & 36.04 \\ 
  0.0 & DL.LS & 16.15 & 17.10 & 13.93 & 17.39 & 19.84 & 11.97 & 14.75 & 19.37 & 30.56 \\ 
  0.0 & .MLE & 28.10 & 29.46 & 23.57 & 27.85 & 31.44 & 20.53 & 22.28 & 27.65 & 36.38 \\ 
  0.0 & DL.MLE & 16.33 & 17.30 & 14.10 & 17.60 & 20.08 & 12.02 & 14.70 & 19.33 & 30.52 \\ 
  1000.0 & .LS & 26.38 & 27.44 & 22.58 & 25.70 & 28.84 & 21.78 & 23.33 & 28.88 & 37.19 \\ 
  1000.0 & DL.LS & 16.68 & 17.53 & 15.25 & 17.97 & 20.34 & 14.80 & 16.53 & 21.42 & 32.43 \\ 
  1000.0 & .MLE & 28.27 & 29.55 & 24.16 & 28.03 & 31.48 & 22.13 & 23.61 & 29.22 & 37.52 \\ 
  1000.0 & DL.MLE & 16.77 & 17.63 & 15.34 & 18.07 & 20.44 & 14.81 & 16.43 & 21.48 & 32.50 \\ 
  2000.0 & .LS & 30.59 & 33.00 & 26.31 & 34.22 & 39.08 & 26.76 & 31.05 & 29.00 & 33.93 \\ 
  2000.0 & DL.LS & 20.77 & 21.86 & 19.96 & 23.73 & 26.40 & 20.91 & 24.04 & 26.30 & 33.89 \\ 
  2000.0 & .MLE & 32.13 & 34.63 & 27.53 & 35.69 & 40.68 & 26.94 & 31.02 & 29.41 & 34.54 \\ 
  2000.0 & DL.MLE & 20.74 & 21.83 & 19.95 & 23.69 & 26.34 & 20.89 & 24.00 & 26.39 & 34.02 \\ 
   \hline
\end{tabular}
\end{table}
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "SSIM") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(INU) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(1,1,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Wed Jul  6 10:22:44 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
INU & method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
0.0 & .LS & 9100.60 & 9038.39 & 9109.37 & 8708.50 & 8321.65 & 8563.13 & 8606.79 & 9266.67 & 9206.82 \\ 
  0.0 & DL.LS & 9594.47 & 9564.94 & 9594.21 & 9325.25 & 8986.59 & 9289.31 & 9328.73 & 9689.09 & 9572.88 \\ 
  0.0 & .MLE & 9022.45 & 8947.96 & 9048.67 & 8584.05 & 8145.88 & 8527.71 & 8605.39 & 9258.94 & 9199.15 \\ 
  0.0 & DL.MLE & 9592.58 & 9562.65 & 9592.44 & 9321.33 & 8980.35 & 9287.35 & 9331.40 & 9691.34 & 9575.48 \\ 
  1000.0 & .LS & 9099.28 & 9036.94 & 9108.80 & 8707.44 & 8321.57 & 8553.26 & 8597.16 & 9259.06 & 9204.61 \\ 
  1000.0 & DL.LS & 9657.16 & 9630.40 & 9638.94 & 9344.76 & 8947.88 & 9255.33 & 9340.20 & 9677.11 & 9551.18 \\ 
  1000.0 & .MLE & 9039.55 & 8967.94 & 9061.73 & 8611.84 & 8185.68 & 8525.02 & 8600.61 & 9251.94 & 9198.01 \\ 
  1000.0 & DL.MLE & 9656.46 & 9629.43 & 9637.77 & 9341.67 & 8942.43 & 9253.97 & 9343.25 & 9677.99 & 9552.45 \\ 
  2000.0 & .LS & 9001.56 & 8863.65 & 9085.50 & 8376.37 & 7939.19 & 8525.58 & 8363.75 & 9422.69 & 9416.87 \\ 
  2000.0 & DL.LS & 9591.50 & 9547.76 & 9584.67 & 9210.72 & 8822.47 & 9200.57 & 9201.26 & 9687.60 & 9590.34 \\ 
  2000.0 & .MLE & 8949.32 & 8803.27 & 9046.80 & 8299.58 & 7839.45 & 8504.96 & 8377.67 & 9415.08 & 9406.34 \\ 
  2000.0 & DL.MLE & 9593.04 & 9549.36 & 9585.54 & 9211.45 & 8822.71 & 9201.12 & 9203.15 & 9688.05 & 9591.23 \\ 
   \hline
\end{tabular}
\end{table}
> 
> 
> 
> 
> 
> 
> all_dat <- all_dat_old
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> 
> 
> 
> 
> library(stringr)
> 
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> TE_TR <- c("15/0.6", "20/0.6", "10/1", "30/1", "40/1", "10/2", "40/2", "60/3", "100/3")
> TE_TR_names  <- paste0('TE/TR = ', TE_TR[1:9])
> 
> 
> tmp_dat_old <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(img == "Test image 1" | img == "Test image 2" | img == "Test image 6" | img == "Test image 8") %>% 
+   mutate(method_old = method) %>%
+   mutate(method = ifelse(DL, paste0("DL+", method), method )) 
> 
> tmp_dat <- tmp_dat_old
> tmp_dat$img_vals  <-  TE_TR_names[as.numeric( str_split_fixed(tmp_dat_old$img, ' ', n=3)[,3] )]
> 
> 
> 
> library(RColorBrewer)
> my_cols <-  brewer.pal(5, 'Dark2')
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "MAPE") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = INU, shape=method, color=factor(INU), linetype = factor(INU)) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p1 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "INU %", linetype = "INU %", shape = "Method") + 
+   xlab('Method') + ylab("MAPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p1
> ggsave('SE-INU-MAPE.jpg')
Saving 7 x 7 in image
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "RMSPE") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = INU, shape=method, color=factor(INU), linetype = factor(INU)) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p2 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "INU %", linetype = "INU %", shape = "Method") + 
+   xlab('Method') + ylab("RMSPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p2
> ggsave('SE-INU-FLASH-RMSPE.jpg')
Saving 7 x 7 in image
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "SSIM") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = INU, shape=method, color=factor(INU), linetype = factor(INU)) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p3 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "INU %", linetype = "INU %", shape = "Method") + 
+    xlab('\nMethod') + ylab("SSIM")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p3
> ggsave('SE-INU-FLASH-SSIM.jpg')
Saving 7 x 7 in image
> 
> 
> library(patchwork)
> p1_new <- p1 + theme(legend.position="none", 
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank()) 
> p2_new <- p2 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(),
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank())
> p3_new <- p3 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(), 
+               axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
> 
> p1_new / p2_new / p3_new
> 
> ggsave('all-SE-INU.png', scale=0.75)
Saving 5.25 x 5.25 in image
> 
> 
> # p2 + theme(legend.position="bottom") + 
> #   labs(color  = "INU %: ", linetype = "INU %: ", shape = "Method: ") + 
> #   theme(legend.key.width = unit(2,"cm")) +
> #   guides(shape = FALSE, size="none", 
> #         linetype = guide_legend(override.aes = list(size = 1.5)),
> #         )
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> leg1 <- cowplot::get_legend(p2 + theme(legend.position="bottom") + 
+   labs(color  = "INU %: ", linetype = "INU %: ", shape = "Method: ") + 
+   theme(legend.key.width = unit(2,"cm")) +
+   guides(shape = FALSE, size="none", 
+         linetype = guide_legend(override.aes = list(size = 2.0, shape=NA))))
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> legend1 <- ggpubr::as_ggplot(leg1) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"), 
+                                 legend.position="bottom")
> ggsave('SE-INU-Legend1.png', scale=1.0)
Saving 7 x 7 in image
> 
> leg2 <- cowplot::get_legend(p2 + theme(legend.position="bottom") + labs(shape = "Method: ") +
+   guides(color = FALSE, linetype = FALSE, size="none"))
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> legend2 <- ggpubr::as_ggplot(leg2) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"), 
+                                 legend.position="bottom")
> ggsave('SE-INU-Legend2.png', scale=1.0)
Saving 7 x 7 in image
> 
> 
> 
> 
> sys.call("convert Legend1.png -trim SE-INU-Legend2.trim.png")
Error in sys.call("convert Legend1.png -trim SE-INU-Legend2.trim.png") : 
  invalid 'which' argument
In addition: Warning message:
In sys.call("convert Legend1.png -trim SE-INU-Legend2.trim.png") :
  NAs introduced by coercion
Execution halted
