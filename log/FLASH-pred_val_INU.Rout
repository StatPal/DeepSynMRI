
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # new_styles <- -1*c(9824,9827,9829,9830)
> new_styles <- 15:18
> 
> INU_vec <- c("00", "10", "20")
> all_normal <- c()
> all_DL     <- c()
> 
> for(i in 1:3){
+     f1 <- paste0("values/FLASH-pred-noise-5-INU-", INU_vec[i], ".csv")
+     f2 <- paste0("values/FLASH-DL-pred-noise-5-INU-", INU_vec[i], ".csv")
+ 
+     all_normal <- rbind(all_normal, as.matrix(read.csv(f1, header = F))[c(6,7,3, 13,14,10), ])
+     all_DL     <- rbind(all_DL    , as.matrix(read.csv(f2, header = F))[c(6,7,3, 13,14,10), ])
+ }
> 
> all_normal <- data.frame(all_normal)
> all_DL <- data.frame(all_DL)
> 
> method <- rep(c("LS", "MLE"), each=3, times=3)  # The second will be 3
> measures <- rep(c("MAPE", "RMSPE", "SSIM"), 3 * 2)
> INU <- rep(INU_vec, each = 3 * 2)
> DL <- rep(c(F, T), each = 3 * 3 * 2)
> 
> all_normal <- cbind(measures, INU, method, all_normal)
> all_DL     <- cbind(measures, INU, method, all_DL    )
> 
> all_dat <- cbind(DL, rbind(all_normal, all_DL))
> all_dat$INU <- as.numeric(all_dat$INU)
> 
> rm(DL)
> rm(measures)
> rm(INU)
> 
> 
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> all_dat_old <- all_dat
> # all_dat$DL <- ifelse(all_dat$DL, "DL", "No DL")
> 
> 
> ## Plots
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.6     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.1.1     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(tidyr)
> library(ggplot2)
> library(xtable)
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "MAPE") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(INU) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(0,0,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Wed Jul  6 10:15:13 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
INU & method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
0 & .LS & 15.12 & 14.68 & 13.38 & 11.53 & 12.02 & 14.69 & 11.56 & 11.93 & 10.33 \\ 
  0 & DL.LS & 10.70 & 10.88 & 7.49 & 7.54 & 7.91 & 10.46 & 7.70 & 7.52 & 6.07 \\ 
  0 & .MLE & 17.77 & 16.92 & 15.12 & 12.59 & 12.68 & 14.89 & 11.88 & 12.01 & 10.27 \\ 
  0 & DL.MLE & 11.89 & 11.84 & 7.70 & 7.86 & 8.09 & 9.37 & 7.60 & 7.46 & 6.03 \\ 
  1000 & .LS & 16.26 & 15.57 & 15.58 & 12.46 & 12.64 & 16.96 & 12.27 & 12.30 & 10.48 \\ 
  1000 & DL.LS & 12.66 & 12.48 & 10.85 & 9.21 & 9.19 & 12.68 & 8.88 & 8.38 & 6.62 \\ 
  1000 & .MLE & 22.20 & 20.62 & 20.36 & 15.09 & 14.28 & 19.36 & 13.29 & 12.55 & 10.40 \\ 
  1000 & DL.MLE & 13.69 & 13.33 & 11.08 & 9.47 & 9.34 & 12.05 & 8.83 & 8.33 & 6.57 \\ 
  2000 & .LS & 20.19 & 18.92 & 20.94 & 15.58 & 14.87 & 22.12 & 14.62 & 13.57 & 10.92 \\ 
  2000 & DL.LS & 17.81 & 16.67 & 18.69 & 13.70 & 12.53 & 20.17 & 12.63 & 10.80 & 7.82 \\ 
  2000 & .MLE & 24.56 & 22.75 & 24.16 & 17.70 & 16.33 & 23.67 & 15.76 & 14.08 & 10.96 \\ 
  2000 & DL.MLE & 18.30 & 17.20 & 18.68 & 14.16 & 12.92 & 19.69 & 13.10 & 11.18 & 7.96 \\ 
   \hline
\end{tabular}
\end{table}
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "RMSPE") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(INU) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(0,0,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Wed Jul  6 10:15:13 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
INU & method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
0 & .LS & 21.04 & 22.06 & 16.88 & 19.94 & 23.65 & 18.27 & 22.54 & 29.60 & 42.95 \\ 
  0 & DL.LS & 15.01 & 16.49 & 10.01 & 13.73 & 16.38 & 13.30 & 15.55 & 19.30 & 25.70 \\ 
  0 & .MLE & 24.72 & 25.45 & 19.03 & 21.73 & 24.92 & 18.53 & 23.18 & 29.79 & 42.71 \\ 
  0 & DL.MLE & 16.66 & 17.93 & 10.22 & 14.22 & 16.69 & 12.03 & 15.43 & 19.18 & 25.54 \\ 
  1000 & .LS & 22.67 & 23.45 & 19.60 & 21.46 & 24.79 & 21.11 & 23.87 & 30.52 & 43.55 \\ 
  1000 & DL.LS & 17.82 & 18.90 & 13.68 & 16.02 & 18.28 & 15.97 & 17.49 & 21.15 & 27.78 \\ 
  1000 & .MLE & 30.84 & 31.00 & 25.47 & 25.95 & 27.99 & 24.02 & 25.83 & 31.13 & 43.26 \\ 
  1000 & DL.MLE & 19.26 & 20.17 & 13.99 & 16.45 & 18.56 & 15.12 & 17.40 & 21.05 & 27.62 \\ 
  2000 & .LS & 28.02 & 28.49 & 26.02 & 26.62 & 29.04 & 27.36 & 28.28 & 33.60 & 45.39 \\ 
  2000 & DL.LS & 24.40 & 24.85 & 22.87 & 23.03 & 24.20 & 24.89 & 24.20 & 26.71 & 32.51 \\ 
  2000 & .MLE & 34.03 & 34.19 & 29.97 & 30.41 & 32.10 & 29.13 & 30.69 & 35.04 & 45.61 \\ 
  2000 & DL.MLE & 25.36 & 25.88 & 22.89 & 24.05 & 25.24 & 24.19 & 25.37 & 27.91 & 33.23 \\ 
   \hline
\end{tabular}
\end{table}
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "SSIM") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(INU) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(0,0,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Wed Jul  6 10:15:13 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
INU & method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
0 & .LS & 8914.29 & 8964.07 & 9016.43 & 9105.82 & 8959.81 & 9048.59 & 9007.75 & 8671.76 & 8104.20 \\ 
  0 & DL.LS & 9547.86 & 9541.05 & 9671.71 & 9642.03 & 9550.09 & 9619.48 & 9562.79 & 9400.80 & 9119.26 \\ 
  0 & .MLE & 8787.91 & 8851.27 & 8925.76 & 9056.63 & 8931.14 & 8999.29 & 8997.84 & 8674.34 & 8111.11 \\ 
  0 & DL.MLE & 9488.76 & 9490.56 & 9659.55 & 9633.91 & 9544.09 & 9643.82 & 9574.78 & 9407.78 & 9124.51 \\ 
  1000 & .LS & 8904.34 & 8955.35 & 8998.14 & 9095.31 & 8952.29 & 9028.26 & 8999.54 & 8668.71 & 8106.60 \\ 
  1000 & DL.LS & 9513.56 & 9501.90 & 9643.15 & 9591.26 & 9482.12 & 9599.66 & 9505.70 & 9316.98 & 9006.68 \\ 
  1000 & .MLE & 8546.42 & 8638.34 & 8667.78 & 8918.39 & 8850.70 & 8769.76 & 8932.97 & 8664.99 & 8115.92 \\ 
  1000 & DL.MLE & 9460.18 & 9455.85 & 9636.03 & 9584.75 & 9476.65 & 9626.74 & 9516.24 & 9322.93 & 9014.35 \\ 
  2000 & .LS & 8869.20 & 8920.31 & 8953.54 & 9057.76 & 8920.73 & 8980.55 & 8968.35 & 8647.40 & 8091.96 \\ 
  2000 & DL.LS & 9455.32 & 9445.99 & 9563.01 & 9518.83 & 9416.63 & 9518.58 & 9435.89 & 9252.63 & 8933.54 \\ 
  2000 & .MLE & 8537.79 & 8626.64 & 8649.95 & 8890.59 & 8817.10 & 8744.77 & 8895.39 & 8634.08 & 8117.66 \\ 
  2000 & DL.MLE & 9410.98 & 9401.29 & 9561.80 & 9497.39 & 9393.07 & 9547.90 & 9426.17 & 9247.19 & 8967.10 \\ 
   \hline
\end{tabular}
\end{table}
> 
> 
> 
> 
> 
> 
> 
> 
> all_dat <- all_dat_old
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> 
> 
> library(stringr)
> 
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> TE_TR <- c("15/0.6", "20/0.6", "10/1", "30/1", "40/1", "10/2", "40/2", "60/3", "100/3")
> TE_TR_names  <- paste0('TE/TR = ', TE_TR[1:9])
> 
> 
> tmp_dat_old <- all_dat %>%
+   pivot_longer(!c(DL, measures, INU, method), names_to = "img", values_to = "vals") %>% 
+   filter(img == "Test image 1" | img == "Test image 2" | img == "Test image 6" | img == "Test image 8") %>% 
+   mutate(method_old = method) %>%
+   mutate(method = ifelse(DL, paste0("DL+", method), method )) 
> 
> tmp_dat <- tmp_dat_old
> tmp_dat$img_vals  <-  TE_TR_names[as.numeric( str_split_fixed(tmp_dat_old$img, ' ', n=3)[,3] )]
> 
> library(RColorBrewer)
> my_cols <-  brewer.pal(5, 'Dark2')
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "MAPE") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = INU, shape=method, color=factor(INU), linetype = factor(INU)) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p1 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "INU %", linetype = "INU %", shape = "Method") + 
+   xlab('Method') + ylab("MAPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p1
> ggsave('FLASH-MAPE.jpg')
Saving 7 x 7 in image
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "RMSPE") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = INU, shape=method, color=factor(INU), linetype = factor(INU)) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p2 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "INU %", linetype = "INU %", shape = "Method") + 
+   xlab('Method') + ylab("RMSPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p2
> ggsave('FLASH-RMSPE.jpg')
Saving 7 x 7 in image
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "SSIM") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = INU, shape=method, color=factor(INU), linetype = factor(INU)) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p3 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "INU %", linetype = "INU %", shape = "Method") + 
+    xlab('\nMethod') + ylab("SSIM")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p3
> ggsave('FLASH-SSIM.jpg')
Saving 7 x 7 in image
> 
> 
> library(patchwork)
> p1_new <- p1 + theme(legend.position="none", 
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank()) 
> p2_new <- p2 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(),
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank())
> p3_new <- p3 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(), 
+               axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
> 
> p1_new / p2_new / p3_new
> 
> ggsave('all-FLASH.png', scale=0.75)
Saving 5.25 x 5.25 in image
> 
> 
> # leg <- cowplot::get_legend(p2 + theme(legend.position="bottom") + 
> #   labs(color  = "INU percentage: ", linetype = "INU percentage: ", shape = "Method: "))
> # ggpubr::as_ggplot(leg) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
> #                                 plot.background = element_rect(fill = "white"), 
> #                                 legend.position="bottom")
> # ggsave('FLASH-Legend.png', scale=0.75)
> 
> 
> leg1 <- cowplot::get_legend(p2 + theme(legend.position="bottom") + 
+   labs(color  = "INU %: ", linetype = "INU %: ", shape = "Method: ") + 
+   theme(legend.key.width = unit(2,"cm")) +
+   guides(shape = FALSE, size="none",
+         linetype = guide_legend(override.aes = list(size = 2.0, shape=NA))))
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> legend1 <- ggpubr::as_ggplot(leg1) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"), 
+                                 legend.position="bottom")
> ggsave('FLASH-Legend1.png', scale=1.0)
Saving 7 x 7 in image
> 
> leg2 <- cowplot::get_legend(p2 + theme(legend.position="bottom") + labs(shape = "Method: ") +
+   guides(color = FALSE, linetype = FALSE, size="none"))
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> legend2 <- ggpubr::as_ggplot(leg2) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"), 
+                                 legend.position="bottom")
> ggsave('FLASH-Legend2.png', scale=1.0)
Saving 7 x 7 in image
> 
> 
> 
> sys.call("convert FLASH-INU-Legend1.png -trim FLASH-INU-Legend1.trim.png")
Error in sys.call("convert FLASH-INU-Legend1.png -trim FLASH-INU-Legend1.trim.png") : 
  invalid 'which' argument
In addition: Warning message:
In sys.call("convert FLASH-INU-Legend1.png -trim FLASH-INU-Legend1.trim.png") :
  NAs introduced by coercion
Execution halted
