
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pred <- as.matrix(read.csv("values/real-performances.csv", header=F))
> 
> 
> perf_LS <- pred[c(6,7,3), ]
> perf_MLE <- pred[c(13,14,10), ]
> perf_DL_LS <- pred[c(20,21,17), ]
> perf_DL_MLE <- pred[c(27,28,24), ]
> 
> perf_new <- rbind(perf_LS, perf_MLE, perf_DL_LS, perf_DL_MLE)
> 
> method <- rep(c("LS", "MLE"), each=3, times=2)  # The second will be 3
> measures <- rep(c("MAPE", "RMSPE", "SSIM"), 2 * 2)
> DL <- rep(c(F, T), each = 3 * 2)
> 
> 
> all_dat <- data.frame(measures, method, DL, perf_new)
> 
> rm(DL)
> rm(measures)
> 
> 
> ## Plots
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.6     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.1.1     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(tidyr)
> library(ggplot2)
> library(xtable)
> 
> colnames(all_dat)[4:12] <- paste0('Test image ', 1:9)
> all_dat_check <- tibble(all_dat)
> all_dat_old <- all_dat_check
> 
> 
> 
> 
> 
> 
> tmp <- all_dat_check %>%
+   pivot_longer(!c(DL, measures, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "MAPE") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   mutate_if(is.numeric, ~ . * 100) %>%
+   select(-DL)
> 
> print(xtable(tmp, digits=c(1,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.1 by xtable 1.8-4 package
% Sun Jul 24 05:19:48 2022
\begin{table}[ht]
\centering
\begin{tabular}{lrrrrrrrrr}
  \hline
method & Test image 1 & Test image 2 & Test image 3 & Test image 4 & Test image 5 & Test image 6 & Test image 7 & Test image 8 & Test image 9 \\ 
  \hline
.LS & 12.79 & 13.46 & 24.55 & 18.87 & 17.98 & 68.66 & 23.63 & 23.17 & 19.34 \\ 
  DL.LS & 14.62 & 14.90 & 25.63 & 19.54 & 18.36 & 68.86 & 24.18 & 23.17 & 19.08 \\ 
  .MLE & 12.78 & 13.52 & 24.49 & 18.92 & 18.07 & 68.19 & 23.47 & 23.01 & 19.21 \\ 
  DL.MLE & 14.63 & 14.94 & 25.53 & 19.53 & 18.39 & 68.41 & 23.96 & 23.00 & 18.96 \\ 
   \hline
\end{tabular}
\end{table}
> 
> 
> 
> 
> 
> 
> 
> 
> library(stringr)
> 
> TE_TR <- c("15/0.6", "20/0.6", "10/1", "30/1", "40/1", "10/2", "40/2", "60/3", "100/3")
> TE_TR_names  <- paste0('TE/TR = ', TE_TR[1:9])
> 
> tmp_dat_old <- all_dat %>%
+   pivot_longer(!c(DL, measures, method), names_to = "img", values_to = "vals") %>% 
+   # filter(img != "Test image 6") %>%   # Remove 6-th test image as it ewas flagged
+   mutate(method_old = method) %>%
+   mutate(method = ifelse(DL, paste0("DL+", method), method )) 
> 
> tmp_dat <- tmp_dat_old
> tmp_dat$img_vals  <-  TE_TR_names[as.numeric( str_split_fixed(tmp_dat_old$img, ' ', n=3)[,3] )]
> 
> 
> 
> library(RColorBrewer)
> my_cols <-  brewer.pal(5, 'Dark2')
> new_styles <- 15:18
> 
> 
> 
> tmp_dat %>%
+   filter(measures == "MAPE") %>%
+   ggplot() + 
+     aes(x = img, y = vals, shape=method, group = method, linetype = method) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     geom_line()
> 
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "MAPE") %>%
+   ggplot() + 
+     aes(x = img_vals, y = vals, shape=method, group = method, linetype = method, color = method) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"),
+                                 axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))
> p1 <- p + 
+   guides(size = FALSE) + 
+   labs(color  = "Method", linetype = "Method", shape = "Method") + 
+   xlab('Image') + ylab("MAPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p1
> ggsave('real-MAPE.jpg')
Saving 7 x 7 in image
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "RMSPE") %>%
+   ggplot() + 
+     aes(x = img_vals, y = vals, shape=method, group = method, linetype = method, color = method) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"),
+                                 axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))
> p2 <- p + 
+   guides(size = FALSE) + 
+   labs(color  = "Method", linetype = "Method", shape = "Method") + 
+   xlab('\nImage') + ylab("RMSPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p2
> ggsave('real-RMSPE.jpg')
Saving 7 x 7 in image
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "SSIM") %>%
+   ggplot() + 
+     aes(x = img_vals, y = vals, shape=method, group = method, linetype = method, color = method) +
+     geom_point(size=3) + 
+     scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"),
+                                 axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))
> p3 <- p + 
+   guides(size = FALSE) + 
+   labs(color  = "Method", linetype = "Method", shape = "Method") + 
+   xlab('\nImage') + ylab("SSIM")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p3
> ggsave('real-SSIM.jpg')
Saving 7 x 7 in image
> 
> 
> library(patchwork)
> p1_new <- p1 + theme(legend.position="none", 
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank()) 
> p2_new <- p2 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(),
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank())
> p3_new <- p3 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(), 
+               axis.text.x = element_text(angle = 30, vjust = 1, hjust=1))
> 
> p1_new / p2_new / p3_new
> 
> ggsave('all-real.png', scale=1.0)
Saving 7 x 7 in image
> 
> 
> 
> 
> tmp <- cowplot::get_legend(p3 + 
+     theme(legend.key.width = unit(1.5,"cm")) + 
+     guides(
+         size = guide_legend(override.aes = list(size = 2)), 
+         linetype = guide_legend(override.aes = list(size = 1.1))))
> ggpubr::as_ggplot(tmp)
> 
> library(grid)
> grid.ls(grid.force())
layout
  background.1-9-12-1
  panel.7-5-7-5
    grill.gTree.772
      panel.background..zeroGrob.771
    NULL
    GeomDrawGrob 2
      GRID.gTree.768 2
        GRID.gTree.768
          guide-box
            legend.box.background.2-4-4-2
            guides.3-3-3-3
              background.1-6-8-1
              title.2-5-2-2
                guide.title.titleGrob.731
                  GRID.text.729
              key-3-1-bg.4-2-4-2
              key-3-1-1.4-2-4-2
              key-3-1-2.4-2-4-2
              key-4-1-bg.5-2-5-2
              key-4-1-1.5-2-5-2
              key-4-1-2.5-2-5-2
              key-5-1-bg.6-2-6-2
              key-5-1-1.6-2-6-2
              key-5-1-2.6-2-6-2
              key-6-1-bg.7-2-7-2
              key-6-1-1.7-2-7-2
              key-6-1-2.7-2-7-2
              label-3-3.4-4-4-4
                guide.label.titleGrob.734
                  GRID.text.732
              label-4-3.5-4-5-4
                guide.label.titleGrob.737
                  GRID.text.735
              label-5-3.6-4-6-4
                guide.label.titleGrob.740
                  GRID.text.738
              label-6-3.7-4-7-4
                guide.label.titleGrob.743
                  GRID.text.741
    NULL
    panel.border..zeroGrob.769
  spacer.8-6-8-6
  spacer.8-4-8-4
  spacer.6-6-6-6
  spacer.6-4-6-4
  axis-t.6-5-6-5
  axis-l.7-4-7-4
    NULL
  axis-r.7-6-7-6
  axis-b.8-5-8-5
    NULL
  xlab-t.5-5-5-5
  xlab-b.9-5-9-5
  ylab-l.7-3-7-3
  ylab-r.7-7-7-7
  subtitle.4-5-4-5
  title.3-5-3-5
  caption.10-5-10-5
  tag.2-8-11-2
> grid.gedit("key-[-0-9]-1-1", size = unit(5, "mm"))
> g <- grid.grab()
> print(g)
gTree[GRID.gTree.782] 
> legend1 <- ggpubr::as_ggplot(g)
> legend1
> ggsave('real-Legend.png', scale=1.0)
Saving 7 x 7 in image
> 
> 
> 
> # all_plot <- (p1_new / p2_new / p3_new) + coord_fixed()
> 
> layout <- c(
+   area(t = 0, l = 0, b = 2, r = 4),
+   area(t = 3, l = 0, b = 4, r = 4),
+   area(t = 5, l = 0, b = 6, r = 4),
+   area(t = 2, l = 5, b = 6, r = 5)
+ )
> p1_new + p2_new + p3_new + legend1 + 
+   plot_layout(design = layout)
> 
> ggsave('all-real-Legend.pdf', scale=1.0)
Saving 7 x 7 in image
> 
> system("pdfcrop all-real-Legend.pdf")
PDFCROP 1.40, 2020/06/06 - Copyright (c) 2002-2020 by Heiko Oberdiek, Oberdiek Package Support Group.
==> 1 page written on `all-real-Legend-crop.pdf'.
> 
> proc.time()
   user  system elapsed 
  5.733   0.184   6.011 
