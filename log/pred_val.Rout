
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # new_styles <- -1*c(9818:9824,9829,9830,9831,9832,9833)
> # new_styles <- -1*c(9828,9829,9830,9831,9832)
> # new_styles <- -1*c(9824,9827,9829,9830)
> # plot(sort(rnorm(25)), pch=new_styles)
> # plot(sort(rnorm(25)), pch=c("☺", "❤", "✌", "❄", "✈"))
> 
> # plot(sort(rnorm(25)), pch=c("❤", "♠", "♦", "♣"))
> 
> # new_styles <- -1*c(9824,9827,9829,9830)
> # # plot(, type="b", pch=new_styles)
> 
> 
> 
> 
> noise_vec <- c(1, 2.5, 5, 7.5, 10)
> all_normal <- c()
> all_DL     <- c()
> 
> for(i in 1:5){
+     f1 <- paste0("values/pred-noise-", noise_vec[i], "-INU-00.csv")
+     f2 <- paste0("values/DL-pred-noise-", noise_vec[i], "-INU-00.csv")
+ 
+     all_normal <- rbind(all_normal, as.matrix(read.csv(f1, header = F))[c(4,5,3, 9,10,8), ])   ## Only the scaled versions
+     all_DL     <- rbind(all_DL    , as.matrix(read.csv(f2, header = F))[c(4,5,3, 9,10,8), ])
+ }
> 
> all_normal <- data.frame(all_normal)
> all_DL <- data.frame(all_DL)
> 
> method <- rep(c("LS", "MLE"), each=3, times=5)
> measures <- rep(c("MAPE", "RMSPE", "SSIM"), 5 * 2)
> errs <- rep(c(1, 2.5, 5, 7.5, 10), each = 3 * 2)
> DL <- rep(c(F, T), each = 5 * 3 * 2)
> 
> all_normal <- cbind(measures, errs, method, all_normal)
> all_DL     <- cbind(measures, errs, method, all_DL    )
> 
> all_dat <- cbind(DL, rbind(all_normal, all_DL))
> 
> rm(DL)
> rm(measures)
> rm(errs)
> 
> 
> 
> ## Plots
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.6     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.1.1     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(tidyr)
> library(ggplot2)
> 
> 
> 
> 
> 
> 
> 
> 
> # ##
> 
> # tmp <- all_dat %>%
> #   pivot_longer(!c(DL, measures, errs, method), names_to = "img", values_to = "vals") %>% 
> #   filter(measures == "MAPE") %>% 
> #   filter(method == "LS") %>% 
> #   pivot_wider(names_from = img, values_from = vals) %>% 
> #   arrange(errs) %>%
> #   select(-c(measures, method)) 
> 
> # xtable::xtable(tmp)
> 
> 
> 
> 
> 
> tmp <- all_dat %>%
+   pivot_longer(!c(DL, measures, errs, method), names_to = "img", values_to = "vals") %>% 
+   filter(measures == "SSIM") %>% 
+   pivot_wider(names_from = img, values_from = vals) %>% 
+   select(-c(measures)) %>% 
+   arrange(method) %>%
+   arrange(errs) %>%
+   relocate(DL, .after=method) %>% 
+   mutate(DL = ifelse(DL, "DL", "")) %>% 
+   mutate(method = interaction(DL, method)) %>% 
+   select(-DL)
> 
> library(xtable)
> print(xtable(tmp, digits=c(1,1,0,2,2,2,2,2,2,2,2,2)), include.rownames=FALSE)
% latex table generated in R 4.2.0 by xtable 1.8-4 package
% Sat Jun 11 11:28:23 2022
\begin{table}[ht]
\centering
\begin{tabular}{rlrrrrrrrrr}
  \hline
errs & method & V1 & V2 & V3 & V4 & V5 & V6 & V7 & V8 & V9 \\ 
  \hline
1.0 & .LS & 99.14 & 99.06 & 99.04 & 97.90 & 95.83 & 97.72 & 97.79 & 99.27 & 98.34 \\ 
  1.0 & DL.LS & 98.85 & 98.76 & 98.74 & 97.64 & 95.60 & 95.84 & 96.61 & 98.35 & 97.04 \\ 
  1.0 & .MLE & 99.18 & 99.07 & 99.03 & 97.79 & 95.70 & 97.64 & 97.67 & 99.07 & 98.13 \\ 
  1.0 & DL.MLE & 98.74 & 98.59 & 98.66 & 97.36 & 95.28 & 95.72 & 96.20 & 97.90 & 96.58 \\ 
  2.5 & .LS & 96.62 & 96.33 & 96.42 & 93.75 & 90.36 & 92.57 & 93.67 & 97.46 & 96.62 \\ 
  2.5 & DL.LS & 98.46 & 98.34 & 98.37 & 97.01 & 94.51 & 94.20 & 95.83 & 98.28 & 97.22 \\ 
  2.5 & .MLE & 96.58 & 96.27 & 96.34 & 93.55 & 89.99 & 92.46 & 93.69 & 97.40 & 96.55 \\ 
  2.5 & DL.MLE & 98.69 & 98.57 & 98.53 & 97.17 & 94.66 & 94.22 & 95.90 & 98.31 & 97.24 \\ 
  5.0 & .LS & 91.01 & 90.38 & 91.09 & 87.08 & 83.22 & 85.63 & 86.07 & 92.67 & 92.07 \\ 
  5.0 & DL.LS & 95.94 & 95.65 & 95.94 & 93.25 & 89.87 & 92.89 & 93.29 & 96.89 & 95.73 \\ 
  5.0 & .MLE & 90.22 & 89.48 & 90.49 & 85.84 & 81.46 & 85.28 & 86.05 & 92.59 & 91.99 \\ 
  5.0 & DL.MLE & 95.93 & 95.63 & 95.92 & 93.21 & 89.80 & 92.87 & 93.31 & 96.91 & 95.75 \\ 
  7.5 & .LS & 85.15 & 84.33 & 85.90 & 81.50 & 77.76 & 80.57 & 79.98 & 87.09 & 86.68 \\ 
  7.5 & DL.LS & 92.96 & 92.46 & 93.21 & 89.20 & 85.14 & 90.29 & 89.10 & 94.15 & 92.80 \\ 
  7.5 & .MLE & 83.05 & 81.94 & 84.48 & 78.90 & 74.61 & 79.99 & 79.92 & 86.97 & 86.56 \\ 
  7.5 & DL.MLE & 92.92 & 92.41 & 93.17 & 89.13 & 85.03 & 90.27 & 89.11 & 94.14 & 92.80 \\ 
  10.0 & .LS & 79.72 & 78.79 & 81.20 & 76.85 & 73.36 & 76.44 & 75.34 & 81.61 & 81.19 \\ 
  10.0 & DL.LS & 87.38 & 86.62 & 88.10 & 83.62 & 79.72 & 83.78 & 83.53 & 90.00 & 89.02 \\ 
  10.0 & .MLE & 78.62 & 77.54 & 80.31 & 75.32 & 71.61 & 75.97 & 75.36 & 81.52 & 81.08 \\ 
  10.0 & DL.MLE & 86.73 & 85.87 & 87.62 & 82.74 & 78.57 & 83.55 & 83.54 & 89.93 & 88.96 \\ 
   \hline
\end{tabular}
\end{table}
> 
> 
> 
> 
> library(stringr)
> 
> names(all_dat)[5:13] <- paste0('Test image ', 1:9)
> TE_TR <- c("15/0.6", "20/0.6", "10/1", "30/1", "40/1", "10/2", "40/2", "60/3", "100/3")
> TE_TR_names  <- paste0('TE/TR = ', TE_TR[1:9])
> 
> 
> tmp_dat_old <- all_dat %>%
+   pivot_longer(!c(DL, measures, errs, method), names_to = "img", values_to = "vals") %>% 
+   filter(img == "Test image 1" | img == "Test image 2" | img == "Test image 6" | img == "Test image 8") %>% 
+   mutate(method_old = method) %>%
+   mutate(method = ifelse(DL, paste0("DL+", method), method )) 
> 
> tmp_dat <- tmp_dat_old
> tmp_dat$img_vals  <-  TE_TR_names[as.numeric( str_split_fixed(tmp_dat_old$img, ' ', n=3)[,3] )]
> 
> 
> # ## Checking order
> # all_dat %>%
> #   filter(measures == "MAPE") %>%
> #   pivot_longer(!c(errs, measures, method, DL), names_to = "img", values_to = "vals") %>% 
> #   filter(img == "Test image 1" | img == "Test image 2") %>% 
> #   filter(errs == 1 | errs == 5) %>% 
> #   mutate(method_old = method) %>%
> #   mutate(method = ifelse(DL, paste0("DL-", method), method ))
> 
> 
> 
> 
> 
> 
> 
> 
> library(RColorBrewer)
> my_cols <-  brewer.pal(5, 'Dark2')
> 
> 
> # as.matrix(tmp_dat %>%
> #   filter(measures == "MAPE"))
> 
> # as.matrix(tmp_dat %>%
> #   filter(errs == 1 | errs == 5) %>% 
> #   filter(measures == "MAPE") %>%
> #   arrange(rev(method)) %>%
> #   arrange(errs))
> 
> 
> tmp_dat %>%
+   # filter(errs == 1 | errs == 5) %>% 
+   filter(measures == "MAPE") %>%
+   mutate(img = img) %>% 
+   ggplot() + 
+     aes(x = interaction(DL, method_old), y = vals, group = errs, shape=method, color=factor(errs), linetype = factor(errs)) +
+     geom_point(aes(size=1)) + 
+     # scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white")) + 
+   labs(colour = "Noise percentage", shape = "Method") + 
+   # guides(linetype = FALSE, size="none") + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   xlab('Method') + ylab("MAPE") + 
+   labs(color  = "Guide name", linetype = "Guide name", shape = "Guide name")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> 
> 
> 
> 
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "MAPE") %>%
+   ggplot() + 
+     aes(x = method, y = vals, group = errs, shape=method, color=factor(errs), linetype = factor(errs)) +
+     geom_point(aes(size=1)) + 
+     # scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p1 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "Noise percentage", linetype = "Noise percentage", shape = "Method") + 
+   xlab('Method') + ylab("MAPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p1
> ggsave('MAPE.png')
Saving 7 x 7 in image
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "RMSPE") %>%
+     ggplot() + 
+     aes(x = method, y = vals, group = errs, shape=method, color=factor(errs), linetype = factor(errs)) +
+     geom_point(aes(size=1)) + 
+     # scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p2 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "Noise percentage", linetype = "Noise percentage", shape = "Method") + 
+   xlab('Method') + ylab("RMSPE")
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p2
> ggsave('RMSPE.png')
Saving 7 x 7 in image
> 
> 
> 
> p <- tmp_dat %>%
+   filter(measures == "SSIM") %>%
+     ggplot() + 
+     aes(x = method, y = vals, group = errs, shape=method, color=factor(errs), linetype = factor(errs)) +
+     geom_point(aes(size=1)) + 
+     # scale_shape_manual(values = new_styles[1:4]) + 
+     scale_colour_manual(values=my_cols) + 
+     facet_grid(cols = vars(img_vals)) +
+     geom_line() +
+     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"))
> 
> p3 <- p + 
+   guides(shape = guide_legend(override.aes = list(size = 5))) + 
+   guides(size = FALSE) + 
+   labs(color  = "Noise percentage", linetype = "Noise percentage", shape = "Method") + 
+   xlab('\nMethod') + ylab("SSIM") 
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> p3
> ggsave('SSIM.png')
Saving 7 x 7 in image
> 
> 
> library(patchwork)
> p1_new <- p1 + theme(legend.position="none", 
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank()) 
> p2_new <- p2 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(),
+               axis.title.x=element_blank(), 
+               axis.text.x=element_blank())
> p3_new <- p3 + theme(legend.position="none", 
+               strip.background = element_blank(),
+               strip.text.x = element_blank(), 
+               axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1),
+               axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 20, l = 0)))
> 
> p3_new
> 
> p1_new / p2_new / p3_new
> 
> ggsave('all-SE.png', scale=0.75)
Saving 5.25 x 5.25 in image
> 
> 
> 
> leg1 <- cowplot::get_legend(p2 + theme(legend.position="bottom") + 
+   labs(color  = "Noise %: ", linetype = "Noise %: ", shape = "Method: ") + 
+   theme(legend.key.width = unit(2,"cm")) +
+   guides(shape = FALSE, size="none",
+           linetype = guide_legend(override.aes = list(size = 2.0, shape=NA))))
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> ## https://stackoverflow.com/questions/48361948/remove-box-and-points-in-legend
> 
> legend1 <- ggpubr::as_ggplot(leg1) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"), 
+                                 legend.position="bottom")
> ggsave('Legend1.png', scale=1.0)
Saving 7 x 7 in image
> 
> leg2 <- cowplot::get_legend(p2 + theme(legend.position="bottom") + labs(shape = "Method: ") +
+   guides(color = FALSE, linetype = FALSE, size="none"))
Warning message:
`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead. 
> legend2 <- ggpubr::as_ggplot(leg2) + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
+                                 plot.background = element_rect(fill = "white"), 
+                                 legend.position="bottom")
> ggsave('Legend2.png', scale=1.0)
Saving 7 x 7 in image
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> # p <- tmp_dat %>%
> #   ggplot(aes(x = interaction(method, DL), y = vals, group = errs, shape=interaction(method, DL))) +
> #     geom_point(aes(color=factor(errs), size=3)) + 
> #     scale_shape_manual(values = new_styles[1:4]) + 
> #     scale_colour_manual(values=my_cols) + 
> #     facet_grid(rows = vars(measures), cols = vars(img), scale='free_y') + 
> #     geom_line(aes(linetype = factor(errs), color = factor(errs))) +
> #     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
> #                                 plot.background = element_rect(fill = "white"),
> #                                 strip.text.y = element_text(angle = 0)) + 
> #   labs(colour = "Noise percentage", shape = "Method") + 
> #   guides(linetype = FALSE, size="none") + 
> #   guides(shape = guide_legend(override.aes = list(size = 5))) + 
> #   xlab('Method') + ylab("SSIM")
> 
> 
> 
> 
> 
> 
> 
> # tmp_dat %>%
> #   ggplot(aes(x = interaction(method, DL), y = vals, group = errs, shape=interaction(method, DL))) +
> #     geom_point(aes(color=factor(errs), size=3)) + 
> #     scale_shape_manual(values = new_styles[1:4]) + 
> #     scale_colour_manual(values=my_cols) + 
> #     facet_wrap(~measures * img, strip.position = c("left")) + 
> #     geom_line(aes(linetype = factor(errs), color = factor(errs))) +
> #     theme_minimal() + theme(panel.background = element_rect(fill = "white", colour = "white", size = 0.5, linetype = "solid"), 
> #                                 plot.background = element_rect(fill = "white"),
> #                                 strip.text.y = element_text(angle = 0)) + 
> #                                 ylab(NULL) +
> #      theme(strip.background = element_blank(),
> #            strip.placement = "outside")
> 
> proc.time()
   user  system elapsed 
  6.344   0.098   6.435 
